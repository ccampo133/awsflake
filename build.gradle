buildscript {
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.+'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61' apply false
    id "org.jetbrains.kotlin.kapt" version "1.3.61" apply false
    id 'org.jetbrains.dokka' version '0.10.1' apply false
}

allprojects {
    group = 'me.ccampo'
    version = '2.0.0'
    description = 'A Snowflake-like library for generating GUIDs within multi-regional AWS environments.'

    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.kapt'
    apply plugin: 'org.jetbrains.dokka'

    dokka {
        outputFormat = 'javadoc'
        outputDirectory = "${buildDir}/javadoc"
    }

    task dokkaJar(type: Jar, dependsOn: dokka) {
        archiveClassifier.set('javadoc')
        from dokka.outputDirectory
    }

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    artifacts {
        archives dokkaJar
        archives sourcesJar
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
            //Will retain parameter names for Java reflection
            javaParameters = true
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
            //Will retain parameter names for Java reflection
            javaParameters = true
        }
    }

    archivesBaseName = "${rootProject.name}-${project.name}"

    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation 'org.slf4j:slf4j-api:1.7.21'
        implementation 'com.amazonaws:aws-java-sdk-core:1.11.718'
        implementation 'io.github.microutils:kotlin-logging:1.7.7'
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
        testImplementation 'org.assertj:assertj-core:3.9.0'
    }

    apply from: "${rootProject.projectDir}/gradle/publishing.gradle"
}
