plugins {
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.61"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

configurations {
    developmentOnly
}

dependencies {
    implementation project(":core")

    annotationProcessor "io.micronaut:micronaut-graal"
    implementation platform("io.micronaut:micronaut-bom:1.2.10")
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation 'com.amazonaws:aws-java-sdk-core:1.11.718'
    implementation "io.micronaut:micronaut-http-client"
    kapt platform("io.micronaut:micronaut-bom:1.2.10")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest platform("io.micronaut:micronaut-bom:1.2.10")
    kaptTest "io.micronaut:micronaut-inject-java"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testImplementation platform("io.micronaut:micronaut-bom:1.2.10")
    testImplementation "io.micronaut.test:micronaut-test-kotlintest"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"
}

test.classpath += configurations.developmentOnly

mainClassName = "me.ccampo.awsflake.server.AWSFlakeApplication"

test {
    useJUnitPlatform()
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

// Don't publish this sample project to Bintray
tasks.publish.enabled = false
tasks.bintrayUpload.enabled = false
